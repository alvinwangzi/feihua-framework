package com.feihua.framework.cms.impl;

import com.feihua.framework.cms.api.ApiCmsContentPageViewPoService;
import com.feihua.framework.cms.dto.CmsContentPageViewDto;
import com.feihua.framework.cms.po.CmsContentPageViewPo;
import com.feihua.utils.calendar.CalendarUtils;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Date;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2018-11-09 17:01:20
 */
@Service
public class ApiCmsContentPageViewPoServiceImpl extends ApiBaseServiceImpl<CmsContentPageViewPo, CmsContentPageViewDto, String> implements ApiCmsContentPageViewPoService {
    @Autowired
    com.feihua.framework.cms.mapper.CmsContentPageViewPoMapper CmsContentPageViewPoMapper;

    public ApiCmsContentPageViewPoServiceImpl() {
        super(CmsContentPageViewDto.class);
    }

    @Override
    public CmsContentPageViewDto wrapDto(CmsContentPageViewPo po) {
        if (po == null) { return null; }
        CmsContentPageViewDto dto = new CmsContentPageViewDto();
        dto.setId(po.getId());
        dto.setContentId(po.getContentId());
        dto.setSiteId(po.getSiteId());
        dto.setCookie(po.getCookie());
        dto.setHost(po.getHost());
        dto.setDataUserId(po.getDataUserId());
        dto.setDataOfficeId(po.getDataOfficeId());
        dto.setDataType(po.getDataType());
        dto.setDataAreaId(po.getDataAreaId());
        dto.setUpdateAt(po.getUpdateAt());
        return dto;
    }


    @Override
    public int computeIv(String contentId, Date date) {
        Date start = CalendarUtils.resetTimeToZero(date);
        Date end = CalendarUtils.resetTimeToLast(date);
        return CmsContentPageViewPoMapper.computeIv(contentId,start,end);
    }

    @Override
    public int existHost(String host, Date date) {
        Date start = CalendarUtils.resetTimeToZero(date);
        Date end = CalendarUtils.resetTimeToLast(date);
        return CmsContentPageViewPoMapper.existHost(host,start,end);
    }

    @Override
    public int computeUv(String contentId, Date date) {
        Date start = CalendarUtils.resetTimeToZero(date);
        Date end = CalendarUtils.resetTimeToLast(date);
        return CmsContentPageViewPoMapper.computeUv(contentId,start,end);
    }

    @Override
    public int existCookie(String cookie, Date date) {
        Date start = CalendarUtils.resetTimeToZero(date);
        Date end = CalendarUtils.resetTimeToLast(date);
        return CmsContentPageViewPoMapper.existCookie(cookie,start,end);
    }
}