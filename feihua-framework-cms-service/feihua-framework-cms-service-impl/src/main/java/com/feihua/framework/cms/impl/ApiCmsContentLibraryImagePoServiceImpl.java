package com.feihua.framework.cms.impl;

import com.feihua.exception.ParamInvalidException;
import com.feihua.framework.cms.api.ApiCmsContentLibraryImagePoService;
import com.feihua.framework.cms.dto.CmsContentLibraryImageDto;
import com.feihua.framework.cms.po.CmsContentLibraryImagePo;
import feihua.jdbc.api.pojo.BasePo;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2018-12-06 15:43:19
 */
@Service
public class ApiCmsContentLibraryImagePoServiceImpl extends ApiBaseServiceImpl<CmsContentLibraryImagePo, CmsContentLibraryImageDto, String> implements ApiCmsContentLibraryImagePoService {
    @Autowired
    com.feihua.framework.cms.mapper.CmsContentLibraryImagePoMapper CmsContentLibraryImagePoMapper;

    public ApiCmsContentLibraryImagePoServiceImpl() {
        super(CmsContentLibraryImageDto.class);
    }

    @Override
    public int deleteBySiteIdAndContentIdAndLibraryId(String siteId, String contentId, String libraryId, String currentUserId) {
        if (StringUtils.isAnyEmpty(siteId,contentId,libraryId,currentUserId)) {
            throw new ParamInvalidException("siteId,contentId,libraryId,currentUserId can not be null or empty");
        }
        CmsContentLibraryImagePo cmsContentLibraryImagePo = new CmsContentLibraryImagePo();
        cmsContentLibraryImagePo.setSiteId(siteId);
        cmsContentLibraryImagePo.setContentId(contentId);
        cmsContentLibraryImagePo.setLibraryId(libraryId);
        cmsContentLibraryImagePo.setDelFlag(BasePo.YesNo.N.name());

        return this.deleteFlagSelectiveWithUpdateUser(cmsContentLibraryImagePo,currentUserId);
    }

    @Override
    public List<CmsContentLibraryImagePo> selectBySiteIdAndContentIdAndLibraryId(String siteId, String contentId, String libraryId) {
        if (StringUtils.isAnyEmpty(siteId,contentId)) {
            throw new ParamInvalidException("siteId,contentId can not be null or empty");
        }
        CmsContentLibraryImagePo cmsContentLibraryImagePo = new CmsContentLibraryImagePo();
        cmsContentLibraryImagePo.setSiteId(siteId);
        cmsContentLibraryImagePo.setContentId(contentId);
        cmsContentLibraryImagePo.setLibraryId(libraryId);
        cmsContentLibraryImagePo.setDelFlag(BasePo.YesNo.N.name());
        return this.selectListSimple(cmsContentLibraryImagePo);
    }

    @Override
    public CmsContentLibraryImageDto wrapDto(CmsContentLibraryImagePo po) {
        if (po == null) { return null; }
        CmsContentLibraryImageDto dto = new CmsContentLibraryImageDto();
        dto.setId(po.getId());
        dto.setContentId(po.getContentId());
        dto.setImageUrl(po.getImageUrl());
        dto.setImageThumbnailUrl(po.getImageThumbnailUrl());
        dto.setImageDes(po.getImageDes());
        dto.setSiteId(po.getSiteId());
        dto.setLibraryId(po.getLibraryId());
        dto.setDataUserId(po.getDataUserId());
        dto.setDataOfficeId(po.getDataOfficeId());
        dto.setDataType(po.getDataType());
        dto.setDataAreaId(po.getDataAreaId());
        dto.setUpdateAt(po.getUpdateAt());
        dto.setSequence(po.getSequence());
        return dto;
    }

}