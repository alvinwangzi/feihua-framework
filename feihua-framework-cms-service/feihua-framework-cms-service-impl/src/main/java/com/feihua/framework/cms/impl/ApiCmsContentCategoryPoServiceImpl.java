package com.feihua.framework.cms.impl;

import com.feihua.framework.cms.api.ApiCmsContentCategoryPoService;
import com.feihua.framework.cms.api.ApiCmsContentCategoryRelPoService;
import com.feihua.framework.cms.dto.CmsContentCategoryDto;
import com.feihua.framework.cms.po.CmsContentCategoryPo;
import com.feihua.framework.cms.po.CmsContentCategoryRelPo;
import com.github.pagehelper.Page;
import feihua.jdbc.api.pojo.PageResultDto;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;

import java.util.ArrayList;
import java.util.List;

import feihua.jdbc.api.service.impl.ApiBaseTreeServiceImpl;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2018-12-06 15:31:20
 */
@Service
public class ApiCmsContentCategoryPoServiceImpl extends ApiBaseTreeServiceImpl<CmsContentCategoryPo, CmsContentCategoryDto, String> implements ApiCmsContentCategoryPoService {
    @Autowired
    com.feihua.framework.cms.mapper.CmsContentCategoryPoMapper CmsContentCategoryPoMapper;
    @Autowired
    private ApiCmsContentCategoryRelPoService apiCmsContentCategoryRelPoService;

    public ApiCmsContentCategoryPoServiceImpl() {
        super(CmsContentCategoryDto.class);
    }

    @Override
    public PageResultDto<CmsContentCategoryDto> searchCmsContentCategorysDsf(com.feihua.framework.cms.dto.SearchCmsContentCategorysConditionDto dto, feihua.jdbc.api.pojo.PageAndOrderbyParamDto pageAndOrderbyParamDto) {
        Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);
        List<com.feihua.framework.cms.dto.CmsContentCategoryDto> list = this.wrapDtos(CmsContentCategoryPoMapper.searchCmsContentCategorys(dto));
        return new PageResultDto(list, this.wrapPage(p));
    }

    @Override
    public List<CmsContentCategoryPo> selectCategoryBySiteIdAndContentId(String siteId, String contentId) {
        if(StringUtils.isEmpty(siteId)){
            return null;
        }

        List<CmsContentCategoryRelPo> contentCategoryRelPos = apiCmsContentCategoryRelPoService.selectBySiteIdAndContentId(siteId,contentId);
        if (contentCategoryRelPos != null && !contentCategoryRelPos.isEmpty()) {
            List<String> categoryIds = new ArrayList<>();
            for (CmsContentCategoryRelPo contentCategoryRelPo : contentCategoryRelPos) {
                categoryIds.add(contentCategoryRelPo.getContentCategoryId());
            }
            return this.selectByPrimaryKeysSimple(categoryIds,false);
        }

        return null;
    }

    @Override
    public CmsContentCategoryDto wrapDto(CmsContentCategoryPo po) {
        if (po == null) { return null; }
        CmsContentCategoryDto dto = new CmsContentCategoryDto();
        dto.setId(po.getId());
        dto.setName(po.getName());
        dto.setSiteId(po.getSiteId());
        dto.setDescription(po.getDescription());
        dto.setImageUrl(po.getImageUrl());
        dto.setImageDes(po.getImageDes());
        dto.setSequence(po.getSequence());
        dto.setLevel(po.getLevel());
        dto.setParentId(po.getParentId());
        dto.setDataUserId(po.getDataUserId());
        dto.setDataOfficeId(po.getDataOfficeId());
        dto.setDataType(po.getDataType());
        dto.setDataAreaId(po.getDataAreaId());
        dto.setUpdateAt(po.getUpdateAt());
        dto.setChannelId(po.getChannelId());
        return dto;
    }
}