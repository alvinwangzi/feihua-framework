package com.feihua.framework.cms.impl;

import com.feihua.framework.cms.api.ApiCmsChannelPageViewPoService;
import com.feihua.framework.cms.dto.CmsChannelPageViewDto;
import com.feihua.framework.cms.po.CmsChannelPageViewPo;
import com.feihua.utils.calendar.CalendarUtils;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Date;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2018-11-09 16:53:22
 */
@Service
public class ApiCmsChannelPageViewPoServiceImpl extends ApiBaseServiceImpl<CmsChannelPageViewPo, CmsChannelPageViewDto, String> implements ApiCmsChannelPageViewPoService {
    @Autowired
    com.feihua.framework.cms.mapper.CmsChannelPageViewPoMapper CmsChannelPageViewPoMapper;

    public ApiCmsChannelPageViewPoServiceImpl() {
        super(CmsChannelPageViewDto.class);
    }

    @Override
    public CmsChannelPageViewDto wrapDto(CmsChannelPageViewPo po) {
        if (po == null) { return null; }
        CmsChannelPageViewDto dto = new CmsChannelPageViewDto();
        dto.setId(po.getId());
        dto.setChannelId(po.getChannelId());
        dto.setSiteId(po.getSiteId());
        dto.setCookie(po.getCookie());
        dto.setHost(po.getHost());
        dto.setDataUserId(po.getDataUserId());
        dto.setDataOfficeId(po.getDataOfficeId());
        dto.setDataType(po.getDataType());
        dto.setDataAreaId(po.getDataAreaId());
        dto.setUpdateAt(po.getUpdateAt());
        return dto;
    }

    @Override
    public int computeIv(String channelId, Date date) {
        Date start = CalendarUtils.resetTimeToZero(date);
        Date end = CalendarUtils.resetTimeToLast(date);
        return CmsChannelPageViewPoMapper.computeIv(channelId,start,end);
    }

    @Override
    public int existHost(String host, Date date) {
        Date start = CalendarUtils.resetTimeToZero(date);
        Date end = CalendarUtils.resetTimeToLast(date);
        return CmsChannelPageViewPoMapper.existHost(host,start,end);
    }

    @Override
    public int computeUv(String channelId, Date date) {
        Date start = CalendarUtils.resetTimeToZero(date);
        Date end = CalendarUtils.resetTimeToLast(date);
        return CmsChannelPageViewPoMapper.computeUv(channelId,start,end);
    }

    @Override
    public int existCookie(String cookie, Date date) {
        Date start = CalendarUtils.resetTimeToZero(date);
        Date end = CalendarUtils.resetTimeToLast(date);
        return CmsChannelPageViewPoMapper.existCookie(cookie,start,end);
    }
}