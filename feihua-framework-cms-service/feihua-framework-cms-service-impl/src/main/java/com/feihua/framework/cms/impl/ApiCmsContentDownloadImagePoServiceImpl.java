package com.feihua.framework.cms.impl;

import com.feihua.exception.ParamInvalidException;
import com.feihua.framework.cms.api.ApiCmsContentDownloadImagePoService;
import com.feihua.framework.cms.dto.CmsContentDownloadImageDto;
import com.feihua.framework.cms.po.CmsContentDownloadImagePo;
import feihua.jdbc.api.pojo.BasePo;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2018-12-26 09:44:06
 */
@Service
public class ApiCmsContentDownloadImagePoServiceImpl extends ApiBaseServiceImpl<CmsContentDownloadImagePo, CmsContentDownloadImageDto, String> implements ApiCmsContentDownloadImagePoService {
    @Autowired
    com.feihua.framework.cms.mapper.CmsContentDownloadImagePoMapper CmsContentDownloadImagePoMapper;

    public ApiCmsContentDownloadImagePoServiceImpl() {
        super(CmsContentDownloadImageDto.class);
    }


    @Override
    public int deleteBySiteIdAndContentIdAndDownloadId(String siteId, String contentId, String downloadId, String currentUserId) {
        if (StringUtils.isAnyEmpty(siteId,contentId,downloadId,currentUserId)) {
            throw new ParamInvalidException("siteId,contentId,libraryId,currentUserId can not be null or empty");
        }
        CmsContentDownloadImagePo cmsContentDownloadImagePo = new CmsContentDownloadImagePo();
        cmsContentDownloadImagePo.setSiteId(siteId);
        cmsContentDownloadImagePo.setContentId(contentId);
        cmsContentDownloadImagePo.setDownloadId(downloadId);
        cmsContentDownloadImagePo.setDelFlag(BasePo.YesNo.N.name());

        return this.deleteFlagSelectiveWithUpdateUser(cmsContentDownloadImagePo,currentUserId);
    }

    @Override
    public List<CmsContentDownloadImagePo> selectBySiteIdAndContentIdAndDownloadId(String siteId, String contentId, String downloadId) {
        if (StringUtils.isAnyEmpty(siteId,contentId)) {
            throw new ParamInvalidException("siteId,contentId can not be null or empty");
        }
        CmsContentDownloadImagePo cmsContentDownloadImagePo = new CmsContentDownloadImagePo();
        cmsContentDownloadImagePo.setSiteId(siteId);
        cmsContentDownloadImagePo.setContentId(contentId);
        cmsContentDownloadImagePo.setDownloadId(downloadId);
        cmsContentDownloadImagePo.setDelFlag(BasePo.YesNo.N.name());
        return this.selectListSimple(cmsContentDownloadImagePo);
    }

    @Override
    public CmsContentDownloadImageDto wrapDto(CmsContentDownloadImagePo po) {
        if (po == null) { return null; }
        CmsContentDownloadImageDto dto = new CmsContentDownloadImageDto();
        dto.setId(po.getId());
        dto.setSiteId(po.getSiteId());
        dto.setContentId(po.getContentId());
        dto.setDownloadId(po.getDownloadId());
        dto.setImageUrl(po.getImageUrl());
        dto.setImageThumbnailUrl(po.getImageThumbnailUrl());
        dto.setImageDes(po.getImageDes());
        dto.setSequence(po.getSequence());
        dto.setDataUserId(po.getDataUserId());
        dto.setDataOfficeId(po.getDataOfficeId());
        dto.setDataType(po.getDataType());
        dto.setDataAreaId(po.getDataAreaId());
        dto.setUpdateAt(po.getUpdateAt());
        return dto;
    }
}