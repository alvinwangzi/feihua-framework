package com.feihua.framework.message.impl;

import com.feihua.framework.message.api.ApiBaseMessagePoService;
import com.feihua.framework.message.dto.BaseMessageDto;
import com.feihua.framework.message.dto.SearchUserMessageConditionDto;
import com.feihua.framework.message.dto.UserMessageDto;
import com.feihua.framework.message.mapper.BaseMessagePoMapper;
import com.feihua.framework.message.po.BaseMessagePo;
import com.github.pagehelper.Page;
import feihua.jdbc.api.pojo.PageAndOrderbyParamDto;
import feihua.jdbc.api.pojo.PageResultDto;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2018-10-29 19:58:54
 */
@Service
public class ApiBaseMessagePoServiceImpl extends ApiBaseServiceImpl<BaseMessagePo, BaseMessageDto, String> implements ApiBaseMessagePoService {
    @Autowired
    private BaseMessagePoMapper baseMessagePoMapper;

    public ApiBaseMessagePoServiceImpl() {
        super(BaseMessageDto.class);
    }



    @Override
    public PageResultDto<BaseMessageDto> searchBaseMessagesDsf(com.feihua.framework.message.dto.SearchBaseMessagesConditionDto dto, feihua.jdbc.api.pojo.PageAndOrderbyParamDto pageAndOrderbyParamDto) {
        Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);
        List<com.feihua.framework.message.dto.BaseMessageDto> list = this.wrapDtos(baseMessagePoMapper.searchBaseMessages(dto));
        return new PageResultDto(list, this.wrapPage(p));
    }

    @Override
    public PageResultDto<UserMessageDto> searchUserMessage(SearchUserMessageConditionDto dto, PageAndOrderbyParamDto pageAndOrderbyParamDto) {
        Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);
        List<UserMessageDto> list = baseMessagePoMapper.searchUserMessage(dto);
        return new PageResultDto(list, this.wrapPage(p));
    }

    @Override
    public BaseMessageDto wrapDto(BaseMessagePo po) {
        if (po == null) {
            return null;
        }
        BaseMessageDto baseMessageDto = new BaseMessageDto();
        baseMessageDto.setTitle(po.getTitle());
        baseMessageDto.setProfile(po.getProfile());
        baseMessageDto.setContent(po.getContent());
        baseMessageDto.setMsgType(po.getMsgType());
        baseMessageDto.setMsgState(po.getMsgState());
        baseMessageDto.setMsgLevel(po.getMsgLevel());
        baseMessageDto.setUpdateAt(po.getUpdateAt());
        baseMessageDto.setId(po.getId());
        baseMessageDto.setDataOfficeId(po.getDataOfficeId());
        baseMessageDto.setDataUserId(po.getDataUserId());
        baseMessageDto.setDataType(po.getDataType());
        baseMessageDto.setDataAreaId(po.getDataAreaId());
        baseMessageDto.setMessageTemplateId(po.getMessageTemplateId());
        return baseMessageDto;
    }
}