package com.feihua.framework.message.impl;

import com.feihua.framework.message.api.ApiBaseMessageTemplateThirdBindPoService;
import com.feihua.framework.message.dto.BaseMessageTemplateThirdBindDto;
import com.feihua.framework.message.po.BaseMessageTemplateThirdBindPo;
import feihua.jdbc.api.pojo.BasePo;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2019-04-29 15:38:33
 */
@Service
public class ApiBaseMessageTemplateThirdBindPoServiceImpl extends ApiBaseServiceImpl<BaseMessageTemplateThirdBindPo, BaseMessageTemplateThirdBindDto, String> implements ApiBaseMessageTemplateThirdBindPoService {
    @Autowired
    com.feihua.framework.message.mapper.BaseMessageTemplateThirdBindPoMapper BaseMessageTemplateThirdBindPoMapper;

    public ApiBaseMessageTemplateThirdBindPoServiceImpl() {
        super(BaseMessageTemplateThirdBindDto.class);
    }

    @Override
    public BaseMessageTemplateThirdBindDto wrapDto(BaseMessageTemplateThirdBindPo po) {
        if (po == null) { return null; }
        BaseMessageTemplateThirdBindDto dto = new BaseMessageTemplateThirdBindDto();
        dto.setId(po.getId());
        dto.setMessageTemplateId(po.getMessageTemplateId());
        dto.setThirdType(po.getThirdType());
        dto.setThirdId(po.getThirdId());
        dto.setThirdTemplateId(po.getThirdTemplateId());
        dto.setThirdTemplateContent(po.getThirdTemplateContent());
        dto.setDataUserId(po.getDataUserId());
        dto.setDataOfficeId(po.getDataOfficeId());
        dto.setDataType(po.getDataType());
        dto.setDataAreaId(po.getDataAreaId());
        dto.setUpdateAt(po.getUpdateAt());
        return dto;
    }

    @Override
    public BaseMessageTemplateThirdBindPo selectByTemplateIdAndThirdType(String templateId, String thirdType) {
        if(StringUtils.isAnyEmpty(thirdType,templateId)) return null;
        BaseMessageTemplateThirdBindPo condition = new BaseMessageTemplateThirdBindPo();
        condition.setDelFlag(BasePo.YesNo.N.name());
        condition.setThirdType(thirdType);
        condition.setMessageTemplateId(templateId);
        return selectOneSimple(condition);
    }

    @Override
    public List<BaseMessageTemplateThirdBindPo> selectByTemplateId(String templateId) {
        if(StringUtils.isEmpty(templateId)) return null;
        BaseMessageTemplateThirdBindPo condition = new BaseMessageTemplateThirdBindPo();
        condition.setDelFlag(BasePo.YesNo.N.name());
        condition.setMessageTemplateId(templateId);
        return selectListSimple(condition);
    }
}