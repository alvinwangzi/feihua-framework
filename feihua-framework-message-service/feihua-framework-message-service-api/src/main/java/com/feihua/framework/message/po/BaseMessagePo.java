package com.feihua.framework.message.po;

import com.feihua.framework.message.api.ApiBaseMessagePoService;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2018-10-29 19:58:53
 *
 * This class corresponds to the database table base_message
 * @mbg.generated do_not_delete_during_merge 2018-10-29 19:58:53
*/
public class BaseMessagePo extends feihua.jdbc.api.pojo.BasePo<String> {
    /**
     * Database Column Remarks:
     *   消息标题
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.TITLE
     *
     * @mbg.generated 2018-10-29 19:58:53
     */
    private String title;

    /**
     * Database Column Remarks:
     *   消息简介
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.PROFILE
     *
     * @mbg.generated 2018-10-29 19:58:53
     */
    private String profile;

    /**
     * Database Column Remarks:
     *   消息内容
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.CONTENT
     *
     * @mbg.generated 2018-10-29 19:58:53
     */
    private String content;

    /**
     * Database Column Remarks:
     *   目录群体，personal=单个人，all=所有人，office=机构下的所有人，role=角色下的所有人，area=区域下的所有人，self_group=自定义的人
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.TARGETS
     *
     * @mbg.generated 2018-10-29 19:58:53
     */
    private String targets;

    /**
     * Database Column Remarks:
     *   根据目录类型不同，值不同，比如：如果是单个人，这里可能是用户id，如果是所有人，这里可能是all或没有值，如果是office这里可能是机构id，等等只是列举例子
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.TARGETS_VALUE
     *
     * @mbg.generated 2018-10-29 19:58:53
     */
    private String targetsValue;

    /**
     * Database Column Remarks:
     *   预计目标人数，-1=表示可能数据太大，无法预估，0=暂无接收人员，这个的数据应该不会出现，没人就别发
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.PREDICT_NUM
     *
     * @mbg.generated 2018-10-29 19:58:53
     */
    private Integer predictNum;

    /**
     * Database Column Remarks:
     *   消息分类，消息的类型，如果要用多级消息分类，最好建字典上下级配合
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.MSG_TYPE
     *
     * @mbg.generated 2018-10-29 19:58:53
     */
    private String msgType;

    /**
     * Database Column Remarks:
     *   消息状态，表示消息的发布状态
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.MSG_STATE
     *
     * @mbg.generated 2018-10-29 19:58:53
     */
    private String msgState;

    /**
     * Database Column Remarks:
     *   消息紧急程度，normal=正常的消息，emergency=紧急，very_emergency=非常紧急
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.MSG_LEVEL
     *
     * @mbg.generated 2018-10-29 19:58:53
     */
    private String msgLevel;

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getProfile() {
        return profile;
    }

    public void setProfile(String profile) {
        this.profile = profile;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public String getTargets() {
        return targets;
    }

    public void setTargets(String targets) {
        this.targets = targets;
    }

    public String getTargetsValue() {
        return targetsValue;
    }

    public void setTargetsValue(String targetsValue) {
        this.targetsValue = targetsValue;
    }

    public Integer getPredictNum() {
        return predictNum;
    }

    public void setPredictNum(Integer predictNum) {
        this.predictNum = predictNum;
    }

    public String getMsgType() {
        return msgType;
    }

    public void setMsgType(String msgType) {
        this.msgType = msgType;
    }

    public String getMsgState() {
        return msgState;
    }

    public void setMsgState(String msgState) {
        this.msgState = msgState;
    }

    public String getMsgLevel() {
        return msgLevel;
    }

    public void setMsgLevel(String msgLevel) {
        this.msgLevel = msgLevel;
    }

    public ApiBaseMessagePoService service() {
        return com.feihua.utils.spring.SpringContextHolder.getBean(ApiBaseMessagePoService.class);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", title=").append(title);
        sb.append(", profile=").append(profile);
        sb.append(", content=").append(content);
        sb.append(", targets=").append(targets);
        sb.append(", targetsValue=").append(targetsValue);
        sb.append(", predictNum=").append(predictNum);
        sb.append(", msgType=").append(msgType);
        sb.append(", msgState=").append(msgState);
        sb.append(", msgLevel=").append(msgLevel);
        sb.append("]");
        return sb.toString();
    }
}