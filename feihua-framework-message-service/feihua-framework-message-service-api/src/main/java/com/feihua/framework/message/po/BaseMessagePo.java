package com.feihua.framework.message.po;

import feihua.jdbc.api.pojo.BasePo;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2019-04-29 16:49:52
 * Database Table Remarks:
 *   消息表
 *
 * This class corresponds to the database table base_message
 * @mbg.generated do_not_delete_during_merge 2019-04-29 16:49:52
*/
public class BaseMessagePo extends feihua.jdbc.api.pojo.BasePo<String> {
    /**
     * Database Column Remarks:
     *   消息标题
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.TITLE
     *
     * @mbg.generated 2019-04-29 16:49:52
     */
    private String title;

    /**
     * Database Column Remarks:
     *   消息简介
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.PROFILE
     *
     * @mbg.generated 2019-04-29 16:49:52
     */
    private String profile;

    /**
     * Database Column Remarks:
     *   消息内容
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.CONTENT
     *
     * @mbg.generated 2019-04-29 16:49:52
     */
    private String content;

    /**
     * Database Column Remarks:
     *   消息分类，消息的类型，如果要用多级消息分类，最好建字典上下级配合
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.MSG_TYPE
     *
     * @mbg.generated 2019-04-29 16:49:52
     */
    private String msgType;

    /**
     * Database Column Remarks:
     *   消息状态，表示消息的发布状态
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.MSG_STATE
     *
     * @mbg.generated 2019-04-29 16:49:52
     */
    private String msgState;

    /**
     * Database Column Remarks:
     *   消息紧急程度，normal=正常的消息，emergency=紧急，very_emergency=非常紧急
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.MSG_LEVEL
     *
     * @mbg.generated 2019-04-29 16:49:52
     */
    private String msgLevel;

    /**
     * Database Column Remarks:
     *   消息模板id
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_message.message_template_id
     *
     * @mbg.generated 2019-04-29 16:49:52
     */
    private String messageTemplateId;

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getProfile() {
        return profile;
    }

    public void setProfile(String profile) {
        this.profile = profile;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public String getMsgType() {
        return msgType;
    }

    public void setMsgType(String msgType) {
        this.msgType = msgType;
    }

    public String getMsgState() {
        return msgState;
    }

    public void setMsgState(String msgState) {
        this.msgState = msgState;
    }

    public String getMsgLevel() {
        return msgLevel;
    }

    public void setMsgLevel(String msgLevel) {
        this.msgLevel = msgLevel;
    }

    public String getMessageTemplateId() {
        return messageTemplateId;
    }

    public void setMessageTemplateId(String messageTemplateId) {
        this.messageTemplateId = messageTemplateId;
    }

    public com.feihua.framework.message.api.ApiBaseMessagePoService service() {
        return com.feihua.utils.spring.SpringContextHolder.getBean(com.feihua.framework.message.api.ApiBaseMessagePoService.class);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", title=").append(title);
        sb.append(", profile=").append(profile);
        sb.append(", content=").append(content);
        sb.append(", msgType=").append(msgType);
        sb.append(", msgState=").append(msgState);
        sb.append(", msgLevel=").append(msgLevel);
        sb.append(", messageTemplateId=").append(messageTemplateId);
        sb.append("]");
        return sb.toString();
    }
}