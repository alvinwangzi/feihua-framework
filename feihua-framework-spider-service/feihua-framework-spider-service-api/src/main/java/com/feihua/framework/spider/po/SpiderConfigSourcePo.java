package com.feihua.framework.spider.po;

import com.feihua.framework.spider.api.ApiSpiderConfigSourcePoService;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2018-12-19 17:13:35
 * Database Table Remarks:
 *   爬虫配置来源
 *
 * This class corresponds to the database table spider_config_source
 * @mbg.generated do_not_delete_during_merge 2018-12-19 17:13:35
*/
public class SpiderConfigSourcePo extends feihua.jdbc.api.pojo.BasePo<String> {
    /**
     * Database Column Remarks:
     *   名称
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column spider_config_source.NAME
     *
     * @mbg.generated 2018-12-19 17:13:35
     */
    private String name;

    /**
     * Database Column Remarks:
     *   域名
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column spider_config_source.DOMAIN
     *
     * @mbg.generated 2018-12-19 17:13:35
     */
    private String domain;

    /**
     * Database Column Remarks:
     *   是否动态网页
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column spider_config_source.IS_DYNAMIC
     *
     * @mbg.generated 2018-12-19 17:13:35
     */
    private String isDynamic;

    /**
     * Database Column Remarks:
     *   动态网页等待时间，单秒
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column spider_config_source.DYNAMIC_WAIT
     *
     * @mbg.generated 2018-12-19 17:13:35
     */
    private Integer dynamicWait;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDomain() {
        return domain;
    }

    public void setDomain(String domain) {
        this.domain = domain;
    }

    public String getIsDynamic() {
        return isDynamic;
    }

    public void setIsDynamic(String isDynamic) {
        this.isDynamic = isDynamic;
    }

    public Integer getDynamicWait() {
        return dynamicWait;
    }

    public void setDynamicWait(Integer dynamicWait) {
        this.dynamicWait = dynamicWait;
    }

    public ApiSpiderConfigSourcePoService service() {
        return com.feihua.utils.spring.SpringContextHolder.getBean(ApiSpiderConfigSourcePoService.class);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", name=").append(name);
        sb.append(", domain=").append(domain);
        sb.append(", isDynamic=").append(isDynamic);
        sb.append(", dynamicWait=").append(dynamicWait);
        sb.append("]");
        return sb.toString();
    }
}