package com.feihua.framework.scheduler.impl;

import com.feihua.framework.scheduler.api.ApiSchedulerPoService;
import com.feihua.framework.scheduler.dto.SchedulerDto;
import com.feihua.framework.scheduler.po.SchedulerPo;
import com.github.pagehelper.Page;
import feihua.jdbc.api.pojo.PageResultDto;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2019-04-16 09:51:01
 */
@Service
public class ApiSchedulerPoServiceImpl extends ApiBaseServiceImpl<SchedulerPo, SchedulerDto, String> implements ApiSchedulerPoService {
    @Autowired
    com.feihua.framework.scheduler.mapper.SchedulerPoMapper SchedulerPoMapper;

    public ApiSchedulerPoServiceImpl() {
        super(SchedulerDto.class);
    }

    @Override
    public PageResultDto<SchedulerDto> searchSchedulersDsf(com.feihua.framework.scheduler.dto.SearchSchedulersConditionDto dto, feihua.jdbc.api.pojo.PageAndOrderbyParamDto pageAndOrderbyParamDto) {
        Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);
        List<com.feihua.framework.scheduler.dto.SchedulerDto> list = this.wrapDtos(SchedulerPoMapper.searchSchedulers(dto));
        return new PageResultDto(list, this.wrapPage(p));
    }


    @Override
    public SchedulerDto wrapDto(SchedulerPo po) {
        if (po == null) { return null; }
        SchedulerDto dto = new SchedulerDto();
        dto.setId(po.getId());
        dto.setName(po.getName());
        dto.setJobName(po.getJobName());
        dto.setJobClass(po.getJobClass());
        dto.setJobGroup(po.getJobGroup());
        dto.setTriggerName(po.getTriggerName());
        dto.setTriggerGroup(po.getTriggerGroup());
        dto.setTriggerCronExpression(po.getTriggerCronExpression());
        dto.setTriggerCronExpressionDesc(po.getTriggerCronExpressionDesc());
        dto.setExcuteNum(po.getExcuteNum());
        dto.setExcuteAvgTime(po.getExcuteAvgTime());
        dto.setDescription(po.getDescription());
        dto.setDataUserId(po.getDataUserId());
        dto.setDataOfficeId(po.getDataOfficeId());
        dto.setDataType(po.getDataType());
        dto.setDataAreaId(po.getDataAreaId());
        dto.setUpdateAt(po.getUpdateAt());
        return dto;
    }
}