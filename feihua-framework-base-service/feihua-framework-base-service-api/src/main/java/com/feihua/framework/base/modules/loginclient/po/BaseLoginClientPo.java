package com.feihua.framework.base.modules.loginclient.po;

import feihua.jdbc.api.pojo.BasePo;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2019-04-08 14:36:03
 * Database Table Remarks:
 *   系统客户端表
 *
 * This class corresponds to the database table base_login_client
 * @mbg.generated do_not_delete_during_merge 2019-04-08 14:36:03
*/
public class BaseLoginClientPo extends feihua.jdbc.api.pojo.BasePo<String> {
    /**
     * Database Column Remarks:
     *   客户端编码，一个可读性的类似id的不重复的值，以区分各个客户端
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_login_client.client_code
     *
     * @mbg.generated 2019-04-08 14:36:03
     */
    private String clientCode;

    /**
     * Database Column Remarks:
     *   名称
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_login_client.client_name
     *
     * @mbg.generated 2019-04-08 14:36:03
     */
    private String clientName;

    /**
     * Database Column Remarks:
     *   客户端类型，字典值，标识是哪一类客户端，参考字典login_client
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_login_client.client_type
     *
     * @mbg.generated 2019-04-08 14:36:03
     */
    private String clientType;

    /**
     * Database Column Remarks:
     *   同一用户同一客户端能登录的最大会话数 -1 = 不限制,默认同shiro.session.maxnum参见配置文件
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_login_client.client_login_maxnum
     *
     * @mbg.generated 2019-04-08 14:36:03
     */
    private String clientLoginMaxnum;

    /**
     * Database Column Remarks:
     *   描述备注
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_login_client.description
     *
     * @mbg.generated 2019-04-08 14:36:03
     */
    private String description;

    public String getClientCode() {
        return clientCode;
    }

    public void setClientCode(String clientCode) {
        this.clientCode = clientCode;
    }

    public String getClientName() {
        return clientName;
    }

    public void setClientName(String clientName) {
        this.clientName = clientName;
    }

    public String getClientType() {
        return clientType;
    }

    public void setClientType(String clientType) {
        this.clientType = clientType;
    }

    public String getClientLoginMaxnum() {
        return clientLoginMaxnum;
    }

    public void setClientLoginMaxnum(String clientLoginMaxnum) {
        this.clientLoginMaxnum = clientLoginMaxnum;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public com.feihua.framework.base.modules.loginclient.api.ApiBaseLoginClientPoService service() {
        return com.feihua.utils.spring.SpringContextHolder.getBean(com.feihua.framework.base.modules.loginclient.api.ApiBaseLoginClientPoService.class);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", clientCode=").append(clientCode);
        sb.append(", clientName=").append(clientName);
        sb.append(", clientType=").append(clientType);
        sb.append(", clientLoginMaxnum=").append(clientLoginMaxnum);
        sb.append(", description=").append(description);
        sb.append("]");
        return sb.toString();
    }
}