package com.feihua.framework.base.modules.area.po;

import com.feihua.framework.base.modules.area.api.ApiBaseAreaPoService;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2018-01-09 16:34:31
 *
 * This class corresponds to the database table base_area
 * @mbg.generated do_not_delete_during_merge 2018-01-09 16:34:31
*/
public class BaseAreaPo extends feihua.jdbc.api.pojo.BaseTreePo<String> {
    /**
     * Database Column Remarks:
     *   名称
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_area.NAME
     *
     * @mbg.generated 2018-01-09 16:34:31
     */
    private String name;

    /**
     * Database Column Remarks:
     *   区域类型，字典配置
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_area.TYPE
     *
     * @mbg.generated 2018-01-09 16:34:31
     */
    private String type;

    /**
     * Database Column Remarks:
     *   排序
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_area.SEQUENCE
     *
     * @mbg.generated 2018-01-09 16:34:31
     */
    private Integer sequence;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public Integer getSequence() {
        return sequence;
    }

    public void setSequence(Integer sequence) {
        this.sequence = sequence;
    }

    public ApiBaseAreaPoService service() {
        return com.feihua.utils.spring.SpringContextHolder.getBean(ApiBaseAreaPoService.class);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", name=").append(name);
        sb.append(", type=").append(type);
        sb.append(", sequence=").append(sequence);
        sb.append("]");
        return sb.toString();
    }
}