package com.feihua.framework.base.impl;

import com.feihua.framework.base.modules.loginclient.api.ApiBaseLoginClientPoService;
import com.feihua.framework.base.modules.loginclient.dto.BaseLoginClientDto;
import com.feihua.framework.base.modules.loginclient.po.BaseLoginClientPo;
import com.github.pagehelper.Page;
import feihua.jdbc.api.pojo.PageResultDto;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * This class was generated by MyBatis Generator.
 * @author yangwei 2019-04-04 11:42:32
 */
@Service
public class ApiBaseLoginClientPoServiceImpl extends ApiBaseServiceImpl<BaseLoginClientPo, BaseLoginClientDto, String> implements ApiBaseLoginClientPoService {
    @Autowired
    com.feihua.framework.base.mapper.BaseLoginClientPoMapper BaseLoginClientPoMapper;

    public ApiBaseLoginClientPoServiceImpl() {
        super(BaseLoginClientDto.class);
    }

    @Override
    public PageResultDto<BaseLoginClientDto> searchBaseLoginClientsDsf(com.feihua.framework.base.modules.loginclient.dto.SearchBaseLoginClientsConditionDto dto, feihua.jdbc.api.pojo.PageAndOrderbyParamDto pageAndOrderbyParamDto) {
        Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);
        List<com.feihua.framework.base.modules.loginclient.dto.BaseLoginClientDto> list = this.wrapDtos(BaseLoginClientPoMapper.searchBaseLoginClients(dto));
        return new PageResultDto(list, this.wrapPage(p));
    }

    @Override
    public BaseLoginClientDto wrapDto(BaseLoginClientPo po) {
        if (po == null) { return null; }
        BaseLoginClientDto dto = new BaseLoginClientDto();
        dto.setId(po.getId());
        dto.setClientCode(po.getClientCode());
        dto.setClientName(po.getClientName());
        dto.setClientType(po.getClientType());
        dto.setClientLoginMaxnum(po.getClientLoginMaxnum());
        dto.setDescription(po.getDescription());
        dto.setDataUserId(po.getDataUserId());
        dto.setDataOfficeId(po.getDataOfficeId());
        dto.setDataType(po.getDataType());
        dto.setDataAreaId(po.getDataAreaId());
        dto.setUpdateAt(po.getUpdateAt());
        return dto;
    }
}