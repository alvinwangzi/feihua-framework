package com.feihua.framework.log.service.po;

import com.feihua.framework.log.service.api.ApiBaseLogPoService;
import feihua.jdbc.api.pojo.BasePo;

/**
 * This class was generated by MyBatis Generator.
 * @author revolver 2019-01-10 13:43:13
 * Database Table Remarks:
 *   系统日志
 *
 * This class corresponds to the database table base_log
 * @mbg.generated do_not_delete_during_merge 2019-01-10 13:43:13
*/
public class BaseLogPo extends BasePo<String> {
    /**
     * Database Column Remarks:
     *   日志类型
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_log.type
     *
     * @mbg.generated 2019-01-10 13:43:13
     */
    private String type;

    /**
     * Database Column Remarks:
     *   昵称，姓名
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_log.nickname
     *
     * @mbg.generated 2019-01-10 13:43:13
     */
    private String nickname;

    /**
     * Database Column Remarks:
     *   操作
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_log.operation
     *
     * @mbg.generated 2019-01-10 13:43:13
     */
    private String operation;

    /**
     * Database Column Remarks:
     *   日志内容
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_log.content
     *
     * @mbg.generated 2019-01-10 13:43:13
     */
    private String content;

    /**
     * Database Column Remarks:
     *   请求IP
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_log.ip
     *
     * @mbg.generated 2019-01-10 13:43:13
     */
    private String ip;

    /**
     * Database Column Remarks:
     *   请求方法
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_log.method
     *
     * @mbg.generated 2019-01-10 13:43:13
     */
    private String method;

    /**
     * Database Column Remarks:
     *   请求参数
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_log.params
     *
     * @mbg.generated 2019-01-10 13:43:13
     */
    private String params;

    /**
     * Database Column Remarks:
     *   执行时长（毫秒）
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column base_log.time
     *
     * @mbg.generated 2019-01-10 13:43:13
     */
    private Long time;

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public String getNickname() {
        return nickname;
    }

    public void setNickname(String nickname) {
        this.nickname = nickname;
    }

    public String getOperation() {
        return operation;
    }

    public void setOperation(String operation) {
        this.operation = operation;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public String getIp() {
        return ip;
    }

    public void setIp(String ip) {
        this.ip = ip;
    }

    public String getMethod() {
        return method;
    }

    public void setMethod(String method) {
        this.method = method;
    }

    public String getParams() {
        return params;
    }

    public void setParams(String params) {
        this.params = params;
    }

    public Long getTime() {
        return time;
    }

    public void setTime(Long time) {
        this.time = time;
    }

    public ApiBaseLogPoService service() {
        return com.feihua.utils.spring.SpringContextHolder.getBean(ApiBaseLogPoService.class);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", type=").append(type);
        sb.append(", nickname=").append(nickname);
        sb.append(", operation=").append(operation);
        sb.append(", content=").append(content);
        sb.append(", ip=").append(ip);
        sb.append(", method=").append(method);
        sb.append(", params=").append(params);
        sb.append(", time=").append(time);
        sb.append("]");
        return sb.toString();
    }
}