package com.feihua.framework.log.service.impl;

import com.feihua.framework.log.service.api.ApiBaseLogPoService;
import com.feihua.framework.log.service.dto.BaseLogDto;
import com.feihua.framework.log.service.dto.SearchBaseLogsConditionDto;
import com.feihua.framework.log.service.po.BaseLogPo;
import com.github.pagehelper.Page;
import feihua.jdbc.api.pojo.PageResultDto;
import feihua.jdbc.api.service.impl.ApiBaseServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * This class was generated by MyBatis Generator.
 * @author revolver 2019-01-10 13:43:14
 */
@Service
public class ApiBaseLogPoServiceImpl extends ApiBaseServiceImpl<BaseLogPo, BaseLogDto, String> implements ApiBaseLogPoService {
    @Autowired
    com.feihua.framework.log.service.mapper.BaseLogPoMapper BaseLogPoMapper;

    public ApiBaseLogPoServiceImpl() {
        super(BaseLogDto.class);
    }

    @Override
    public PageResultDto<BaseLogDto> searchBaseLogsDsf(SearchBaseLogsConditionDto dto, feihua.jdbc.api.pojo.PageAndOrderbyParamDto pageAndOrderbyParamDto) {
        Page p = super.pageAndOrderbyStart(pageAndOrderbyParamDto);
        List<BaseLogDto> list = this.wrapDtos(BaseLogPoMapper.searchBaseLogs(dto));
        return new PageResultDto(list, this.wrapPage(p));
    }

    @Override
    public BaseLogDto wrapDto(BaseLogPo po) {
        if (po == null) { return null; }
        BaseLogDto dto = new BaseLogDto();
        dto.setId(po.getId());
        dto.setType(po.getType());
        dto.setNickname(po.getNickname());
        dto.setOperation(po.getOperation());
        dto.setContent(po.getContent());
        dto.setIp(po.getIp());
        dto.setMethod(po.getMethod());
        dto.setParams(po.getParams());
        dto.setTime(po.getTime());
        dto.setUpdateAt(po.getUpdateAt());
        return dto;
    }
}